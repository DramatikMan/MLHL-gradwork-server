name: build

on:

  push:
    branches: [main]

jobs:

  build_and_update:

    name: Build and update latest image
    runs-on: ubuntu-latest

    steps:

      - name: Get current latest image ID
        run: >
          python -c
          "import requests;
          url = 'https://api.github.com/user/packages/container/${{ github.event.repository.name }}/versions';
          headers = dict(
              Authorization='token ${{ secrets.GHCR_PAT }}',
              Accept='application/vnd.github.v3+json'
          );
          resp = requests.get(url, headers=headers);
          print(f'IMAGE_EXISTED={1 if resp.status_code == 200 else 0}');
          print(f'''LATEST_IMAGE_ID={resp.json()[0]['id'] if resp.status_code == 200 else None}''');"
          >> ${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Append downcase repo path to the environment
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build a new image and push it to GHCR as "latest"
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO }}:latest

      - name: Delete previous image
        if: ${{ env.IMAGE_EXISTED == 1}}
        run: >
          wget
          --header="Authorization: token ${{ secrets.GHCR_PAT }}"
          --header="Accept: application/vnd.github.v3+json"
          --method=DELETE
          -nv
          -O - https://api.github.com/user/packages/container/${{ github.event.repository.name }}/versions/${{ env.LATEST_IMAGE_ID }}
